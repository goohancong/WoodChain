<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0"
    />
    <title>Select Product</title>
    <link
      rel="icon"
      href="/images/WoodChain Logo.png"
      type="image/x-icon"
    />
    <!-- Bootstrap CSS -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.5.0/font/bootstrap-icons.min.css"
    />
    <!-- End of Bootstrap CSS -->
    <link
      rel="stylesheet"
      href="/css/public.css"
    />
    <link
      rel="stylesheet"
      href="/css/selectproduct.css"
    />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  </head>

  <body>
    <!-- Navigation Bar -->
    <%- include('../partials/navbar') %>
    <!-- End of Navigation Bar -->

    <!-- Left Side: Order Summary and Right Side: Select Product Section -->
    <div class="container">
      <div class="row vh-100 justify-content-center align-items-center">
        <div class="row">
          <!-- Left Side: Order Summary -->
          <div class="col-md-4 my-lg-5">
            <h2>Order Summary</h2>
            <div class="order-summary">
              <ul class="list-group mb-3">
                <!-- Order Summary Items here -->
                <li
                  class="list-group-item d-flex justify-content-between lh-sm"
                >
                  <div>
                    <h6 class="my-0">No Product here yet</h6>
                    <small class="text-muted">RM xxx</small>
                  </div>
                  <span class="text-muted">Quantity</span>
                </li>
              </ul>
              <!-- Message Container -->
              <div
                id="checkout-message"
                class="text-danger mt-3"
              ></div>
            </div>
            <button
              class="btn btn-primary w-100"
              type="button"
              onclick="proceedToCheckout()"
            >
              Proceed to Checkout
            </button>
          </div>
          <!-- End of Left Side: Order Summary -->

          <!-- Right Side: Select Product -->
          <div class="col-md-8">
            <!-- Header and Search Bar -->
            <h2 class="mt-3"><%= supplier.companyName %></h2>
            <p class="mb-0 text-muted">
              <%= supplier.supplierDescription.length > 60 ?
              supplier.supplierDescription.substring(0, 60) + '...' :
              supplier.supplierDescription %>
            </p>
            <!-- Search Product Bar -->
            <div class="my-3 text-center text">
              <h5 class="d-none d-md-block">
                ___________ Select product here ___________
              </h5>
              <h5 class="d-none d-sm-block d-md-none">
                __________ Select product here __________
              </h5>
              <h6 class="d-sm-none">Select product here</h6>
            </div>
            <!-- End of Search Product Bar -->

            <!-- Select Product List -->
            <div
              class="row"
              style="height: 75vh"
            >
              <div
                class="product-container"
                style="height: auto; overflow-y: auto"
              >
                <ul class="list-group">
                  <% if (products.length === 0) { %>
                  <li class="list-group-item text-center text-muted">
                    No products found.
                  </li>
                  <% } else { %> <% products.forEach(function(product) { %>
                  <li class="list-group-item d-flex align-items-center">
                    <div class="col-auto me-3">
                      <img
                        src="<%= product.productImage ? '/uploads/productphoto/' + product.productImage : '/images/producticon.png' %>"
                        alt="Product Image"
                        class="img-fluid rounded-circle"
                        style="width: 50px; height: 50px"
                      />
                    </div>
                    <div class="col">
                      <h5 class="mb-0"><%= product.productName %></h5>
                      <p class="mb-0 text-muted">
                        <%= product.productDescription.length > 70 ?
                        product.productDescription.substring(0, 70) + '...' :
                        product.productDescription %>
                      </p>
                      <div
                        class="d-flex justify-content-between align-items-center"
                      >
                        <span>RM <%= product.productPrice %> / each</span>
                        <div class="col-auto">
                          <div
                            class="d-flex justify-content-center align-items-center quantity-input"
                          >
                            <button
                              class="btn btn-sm btn-outline-secondary minus-btn"
                              onclick="updateQuantity('<%= product.productID %>', '<%= supplier.supplierID %>', -1)"
                            >
                              -
                            </button>
                            <input
                              type="text"
                              class="form-control text-center quantity"
                              data-productid="<%= product.productID %>"
                              data-supplierid="<%= supplier.supplierID %>"
                              value="0"
                            />
                            <button
                              class="btn btn-sm btn-outline-secondary plus-btn"
                              onclick="updateQuantity('<%= product.productID %>', '<%= supplier.supplierID %>', 1)"
                            >
                              +
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  </li>
                  <% }); %> <% } %>
                </ul>
              </div>
            </div>
            <!-- End of Select Product List -->
          </div>
          <!-- End of Right Side: Select Product -->
        </div>
      </div>
    </div>
    <!-- End of Left Side: Order Summary and Right Side: Select Product Section -->

    <!-- Partial Modals -->
    <%- include('../partials/usermodals') %> <%-
    include('../partials/signoutmodal') %> <%-
    include('../partials/uploadprofilephotomodal') %>
    <!-- End of Partial Modals -->

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Client Side JS -->
    <script>
      // Restores the session state and sets the current supplier ID in sessionStorage when the document is loaded
      document.addEventListener("DOMContentLoaded", () => {
        // Restore session state when the document is loaded
        restoreSessionState();
        // Set the current supplier ID in sessionStorage
        sessionStorage.setItem(
          "currentSupplierID",
          "<%= supplier.supplierID %>"
        );
      });

      // Handles the beforeunload event to prompt the user if there are unsaved order items
      window.addEventListener("beforeunload", function (e) {
        // Check if there are items in the order for the current supplier
        const order = JSON.parse(sessionStorage.getItem("order") || "{}");
        const currentSupplierID = "<%= supplier.supplierID %>";
        if (
          order[currentSupplierID] &&
          Object.keys(order[currentSupplierID]).length > 0 &&
          !isNavigationExpected
        ) {
          e.preventDefault();
          e.returnValue = "";
        }
      });

      // Restores the order state from sessionStorage and updates the order summary
      function restoreSessionState() {
        // Restore the order state from sessionStorage
        const order = JSON.parse(sessionStorage.getItem("order") || "{}");
        const currentSupplierID = "<%= supplier.supplierID %>";
        if (order[currentSupplierID]) {
          // Set the quantity of each product based on the order state
          Object.keys(order[currentSupplierID]).forEach((productId) => {
            const quantityInput = document.querySelector(
              `.quantity[data-productid="${productId}"][data-supplierid="${currentSupplierID}"]`
            );
            if (quantityInput) {
              quantityInput.value = order[currentSupplierID][productId];
            }
          });
        }
        updateOrderSummary();
      }

      // Updates the quantity of a product and saves it to sessionStorage
      function updateQuantity(productId, supplierId, change) {
        // Update the quantity of a product and save it to sessionStorage
        const input = document.querySelector(
          `.quantity[data-productid="${productId}"][data-supplierid="${supplierId}"]`
        );
        let currentQuantity = parseInt(input.value);
        currentQuantity += change;
        if (currentQuantity < 0) currentQuantity = 0;
        input.value = currentQuantity;

        updateSessionStorage(productId, supplierId, currentQuantity);
        updateOrderSummary();
      }

      // Saves the order state to sessionStorage
      function updateSessionStorage(productId, supplierId, quantity) {
        // Save the order state to sessionStorage
        let order = sessionStorage.getItem("order")
          ? JSON.parse(sessionStorage.getItem("order"))
          : {};
        if (!order[supplierId]) {
          order[supplierId] = {};
        }
        if (quantity > 0) {
          order[supplierId][productId] = quantity;
        } else {
          delete order[supplierId][productId];
          if (Object.keys(order[supplierId]).length === 0) {
            delete order[supplierId];
          }
        }
        sessionStorage.setItem("order", JSON.stringify(order));
      }

      // Updates teh order summary display
      function updateOrderSummary() {
        // Update the order summary display
        const order = JSON.parse(sessionStorage.getItem("order") || "{}");
        const summaryContainer = document.querySelector(
          ".order-summary ul.list-group"
        );
        summaryContainer.innerHTML = "";

        const currentSupplierID = "<%= supplier.supplierID %>";
        if (
          !order[currentSupplierID] ||
          Object.keys(order[currentSupplierID]).length === 0
        ) {
          // Display a message if no products are selected
          const noProductItem = document.createElement("li");
          noProductItem.className = "list-group-item text-center text-muted";
          noProductItem.textContent = "No products selected yet.";
          summaryContainer.appendChild(noProductItem);
        } else {
          // Display the selected products
          Object.keys(order[currentSupplierID]).forEach((productId) => {
            const productElement = document
              .querySelector(
                `.product-container [data-productid="${productId}"][data-supplierid="${currentSupplierID}"]`
              )
              .closest(".list-group-item");
            const productName = productElement.querySelector("h5").textContent;
            const productPrice = parseFloat(
              productElement.querySelector("span").textContent.split(" ")[1]
            );
            const quantity = order[currentSupplierID][productId];
            const totalPrice = productPrice * quantity;

            const li = document.createElement("li");
            li.className =
              "list-group-item d-flex justify-content-between align-items-center lh-sm";
            li.innerHTML = `
        <div class="d-flex flex-column">
          <h6 class="my-0">${productName}</h6>
          <small class="text-muted">RM ${totalPrice.toFixed(2)}</small>
        </div>
        <div class="d-flex align-items-center">
          <span class="text-muted me-3">${quantity}</span>
          <button class="btn btn-danger btn-sm" onclick="deleteProduct('${productId}', '${currentSupplierID}')">
            <i class="bi bi-trash"></i>
          </button>
        </div>
      `;
            summaryContainer.appendChild(li);
          });
        }
      }

      // Removes a product from the order and updates the order summary
      function deleteProduct(productId, supplierId) {
        // Remove a product from the order
        updateSessionStorage(productId, supplierId, 0); // Set quantity to 0 to remove the product
        updateOrderSummary();
        // Also update the product input field in the product list
        const input = document.querySelector(
          `.quantity[data-productid="${productId}"][data-supplierid="${supplierId}"]`
        );
        if (input) {
          input.value = 0;
        }
      }

      // Proceeds to the checkout page, encoding the order details in the URL
      function proceedToCheckout() {
        //Proceed to checktout page
        const order = JSON.parse(sessionStorage.getItem("order") || "{}");
        const currentSupplierID = "<%= supplier.supplierID %>";
        const messageContainer = document.getElementById("checkout-message");

        if (
          !order[currentSupplierID] ||
          Object.keys(order[currentSupplierID]).length === 0
        ) {
          // Display a message if no products are selecte
          messageContainer.textContent =
            "No products selected. Please add products to your order before proceeding to checkout.";

          // Set a timeout to clear the message after 2500 milliseconds (2.5 seconds)
          setTimeout(function () {
            messageContainer.textContent = ""; // Clear the text content of the message container
          }, 2500);

          return;
        }

        // Encode the order details and navigate to the place order page
        const orderDetailsEncoded = encodeURIComponent(
          JSON.stringify(order[currentSupplierID])
        );
        isNavigationExpected = true;
        sessionStorage.setItem("isNavigationExpected", true);
        window.location.href = `/user/placeorder?orderDetails=${orderDetailsEncoded}&supplierID=${currentSupplierID}`;
      }

      // Remove the navigation expected flag from sessionStorage on load
      sessionStorage.removeItem("isNavigationExpected");
    </script>
    <!-- End of Client Side JS -->
  </body>
</html>
