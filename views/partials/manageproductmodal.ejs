<!-- Manage Product Modal -->
<div
  class="modal fade"
  id="manageProductModal<%= product.productID %>"
  tabindex="-1"
  aria-labelledby="productModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5
          class="modal-title"
          id="productModalLabel"
        >
          Manage Your Product
        </h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <!-- Update Product Form -->
        <form
          method="POST"
          action="/supplier/updateProduct"
          enctype="multipart/form-data"
        >
          <input
            type="hidden"
            name="product_id"
            value="<%= product.productID %>"
          />
          <!-- Product Name -->
          <div class="mb-3">
            <label
              for="product_name<%= product.productID %>"
              class="form-label"
              >Product Name</label
            >
            <input
              type="text"
              class="form-control"
              name="product_name"
              id="product_name<%= product.productID %>"
              placeholder="Product Name"
              value="<%= product.productName %>"
              pattern=".*\S+.*"
              title="Product name cannot be empty or only whitespace."
              required
              maxlength="255"
            />
          </div>
          <!-- Product Description -->
          <div class="mb-3">
            <label for="product_description<%= product.productID %>" class="form-label">Product Description</label>
            <textarea
              class="form-control"
              name="product_description"
              id="product_description<%= product.productID %>"
              placeholder="Product Description"
              required
              maxlength="300"
              pattern=".*\S+.*"
              title="Product description cannot be empty or only whitespace."
            ><%= product.productDescription %> </textarea>
            <div id="productDescriptionFeedback<%= product.productID %>" class="invalid-feedback" style="display:none;">
              Product description cannot be empty or only whitespace.
            </div>
            <div class = "text-end"> 
              <small id="charCount<%= product.productID %>" >0/300 </small>
            </div>
          </div>
          <!-- Price -->
          <div class="mb-3">
            <label for="product_price<%= product.productID %>" class="form-label">Product Price (RM)</label>
            <input
              type="text"
              class="form-control"
              name="product_price"
              id="product_price<%= product.productID %>"
              placeholder="Product Price"
              value="<%= product.productPrice %>"
              required
              pattern="^\d{1,6}(\.\d{2})?$"
              title="Please enter a valid price with up to 6 digits and two decimal places (e.g., 123456.78)."
            />
          </div>
          <!-- Image -->
          <div class="mb-3">
            <label
              for="productPhoto<%= product.productID %>"
              class="form-label"
              >Choose a photo (PNG, JPG, JPEG):</label
            >
            <input
              type="file"
              class="form-control"
              name="productPhoto"
              accept=".png, .jpg, .jpeg"
            />
          </div>

          <div class="modal-footer">
            <div>
            <button
              type="submit"
              class="btn btn-primary"
            >
              Update Product
            </button>
          </div>
        </form>

        <!-- Delete Product Form -->
        <form
          method="POST"
          action="/supplier/deleteProduct"
        >
          <input
            type="hidden"
            name="product_id"
            value="<%= product.productID %>"
          />
          <button
            type="submit"
            class="btn btn-danger"
          >
            Delete Product
          </button>
        </form>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- End of Manage Product Modal -->

<!-- Update Product Confirmation Modal -->
<div
  class="modal fade"
  id="confirmUpdateModal<%= product.productID %>"
  tabindex="-1"
  aria-labelledby="confirmUpdateModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5
          class="modal-title"
          id="confirmUpdateModalLabel"
        >
          Confirm Update
        </h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        Are you sure you want to update this product?
      </div>
      <div class="modal-footer">
        <button
          type="button"
          class="btn btn-secondary"
          data-bs-dismiss="modal"
        >
          Cancel
        </button>
        <button
          type="button"
          class="btn btn-primary"
          id="confirmUpdateButton<%= product.productID %>"
        >
          Confirm
        </button>
      </div>
    </div>
  </div>
</div>
<!-- End of Update Product Confirmation Modal -->
 
<!-- Delete Product Confirmation Modal -->
<div
  class="modal fade"
  id="confirmDeleteModal<%= product.productID %>"
  tabindex="-1"
  aria-labelledby="confirmDeleteModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Delete</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Are you sure you want to delete this product?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmDeleteButton<%= product.productID %>">Delete</button>
      </div>
    </div>
  </div>
</div>
<!--  End of Delete Product Confirmation Modal -->

<!-- Client Side JS -->
<script>
// Update the character count for the product description field as the user types
//  Function for calculate the product description word count
  document.getElementById("product_description<%= product.productID %>").addEventListener('input', function () {
    var maxLength = this.getAttribute('maxlength');
    var currentLength = this.value.length;
    document.getElementById("charCount<%= product.productID %>").innerText = `${currentLength}/${maxLength}`;
});

// Run the following when the DOM is fully loaded
// Function for managing process of updating products within a modal interface on a webpage
document.addEventListener("DOMContentLoaded", function () {
  const updateForms = document.querySelectorAll('form[action="/supplier/updateProduct"]');

  // Loop through each update form
  updateForms.forEach((form) => {
    const productID = form.querySelector('input[name="product_id"]').value;
    const productDescriptionInput = form.querySelector(`#product_description${productID}`);
    const feedbackElement = document.getElementById(`productDescriptionFeedback${productID}`);

    // Update character count and validation message as the user types
    productDescriptionInput.addEventListener('input', function () {
      const currentLength = this.value.length;
      const maxLength = this.getAttribute('maxlength');
      document.getElementById(`charCount${productID}`).innerText = `${currentLength}/${maxLength}`;

      // Check if the description is empty or only whitespace
      if (this.value.trim() === "") {
        this.classList.add('is-invalid');
        feedbackElement.style.display = 'block';
      } else {
        this.classList.remove('is-invalid');
        feedbackElement.style.display = 'none';
      }
    });

    // Form submission event listener
    form.addEventListener("submit", function (event) {
     // Prevent form submission if the description is empty or only whitespace
      if (productDescriptionInput.value.trim() === "") {
        event.preventDefault();
        productDescriptionInput.classList.add('is-invalid');
        feedbackElement.style.display = 'block';
        return;
      }

      event.preventDefault(); // Prevent the form from submitting immediately

      const manageModalElement = document.getElementById(`manageProductModal${productID}`);
      const manageModal = bootstrap.Modal.getInstance(manageModalElement);
      const confirmModalElement = document.getElementById(`confirmUpdateModal${productID}`);
      const confirmModal = new bootstrap.Modal(confirmModalElement, {
        keyboard: false,
        backdrop: 'static' // Ensures that the backdrop is handled by Bootstrap
      });

      // Close the manage modal and prepare to show the confirmation modal
      manageModal.hide();

      manageModalElement.addEventListener('hidden.bs.modal', function () {
        // Remove any existing backdrop to avoid conflicts
        document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());

        // Show the confirmation modal only after the manage modal is completely closed
        confirmModal.show();
      }, { once: true });

      document.getElementById(`confirmUpdateButton${productID}`).onclick = () => {
        // When confirmation is clicked, close the confirmation modal and submit the form
        confirmModal.hide();
        setTimeout(() => { // Slight delay to ensure the modal closes smoothly
          form.submit();
        }, 100);
      };

      // If the confirmation modal is closed without submitting (e.g., using the cancel button)
      confirmModalElement.addEventListener('hidden.bs.modal', function () {
        setTimeout(() => { // Delay slightly before showing the manage modal again if needed
          manageModal.show();
        }, 100);
      }, { once: true });
    });
  });
});

// Run the following when the DOM is fully loaded
// Function for deleting product
document.addEventListener("DOMContentLoaded", function () {
  const deleteForms = document.querySelectorAll('form[action="/supplier/deleteProduct"]');

  deleteForms.forEach((form) => {
    form.addEventListener("submit", function (event) {
      event.preventDefault(); // Prevent the form from submitting immediately

      const productID = form.querySelector('input[name="product_id"]').value;
      const manageModalElement = document.getElementById(`manageProductModal${productID}`);
      const manageModal = bootstrap.Modal.getInstance(manageModalElement);
      const confirmDeleteModalElement = document.getElementById(`confirmDeleteModal${productID}`);
      const confirmDeleteModal = new bootstrap.Modal(confirmDeleteModalElement, {
        keyboard: false,
        backdrop: 'static' // Ensures that the backdrop is handled by Bootstrap
      });

      // Close the manage modal and prepare to show the confirmation delete modal
      manageModal.hide();

      manageModalElement.addEventListener('hidden.bs.modal', function () {
        // Remove any existing backdrop to avoid conflicts
        document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());

        // Show the confirmation delete modal only after the manage modal is completely closed
        confirmDeleteModal.show();
      }, { once: true });

      document.getElementById(`confirmDeleteButton${productID}`).onclick = () => {
        // When delete is confirmed, close the confirmation modal and submit the form
        confirmDeleteModal.hide();
        setTimeout(() => { // Slight delay to ensure the modal closes smoothly
          form.submit();
        }, 100);
      };

      // If the confirmation delete modal is closed without submitting (e.g., using the cancel button)
      confirmDeleteModalElement.addEventListener('hidden.bs.modal', function () {
        setTimeout(() => { // Delay slightly before showing the manage modal again if needed
          manageModal.show();
        }, 100);
      }, { once: true });
    });
  });
});
</script>
<!-- End of Client Side JS -->


